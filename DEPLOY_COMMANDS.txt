# 🚀 aitars.io 部署命令列表

## 第1步: 配置DNS
在域名提供商控制台添加A记录：
- @ 指向 138.197.99.117
- www 指向 138.197.99.117

## 第2步: 连接服务器
ssh root@138.197.99.117
密码: 20f1d493d1f54c83e48228084f

## 第3步: 在服务器上运行以下命令 (逐行复制执行)

# 更新系统
apt update && apt upgrade -y

# 安装必要软件
apt install -y curl wget git nginx certbot python3-certbot-nginx ufw htop vim

# 安装Node.js 18
curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
apt install -y nodejs

# 安装PM2
npm install -g pm2

# 配置防火墙
ufw --force enable
ufw allow ssh
ufw allow 80
ufw allow 443

# 创建应用目录
mkdir -p /var/www/aitars
cd /var/www/aitars

# 克隆项目 (替换为您的GitHub仓库地址)
git clone https://github.com/yourusername/ai-assistant.git .

# 安装依赖
npm install

# 配置环境变量
cp deploy-config/production.env .env

# 创建数据目录
mkdir -p data

# 配置数据库
npx prisma generate
npx prisma db push

# 构建前端
npm run build

# 配置Nginx
cat > /etc/nginx/sites-available/aitars.io << 'EOF'
server {
    listen 80;
    server_name aitars.io www.aitars.io;
    
    # API代理
    location /api/ {
        proxy_pass http://localhost:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 86400;
    }
    
    # 健康检查
    location /health {
        proxy_pass http://localhost:3001/health;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # 前端静态文件
    location / {
        root /var/www/aitars/dist;
        index index.html index.htm;
        try_files $uri $uri/ /index.html;
        
        # 静态资源缓存
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }
    
    # Gzip压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
    
    # 安全头
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
}
EOF

# 启用站点
ln -sf /etc/nginx/sites-available/aitars.io /etc/nginx/sites-enabled/
rm -f /etc/nginx/sites-enabled/default

# 测试配置
nginx -t

# 重启Nginx
systemctl restart nginx
systemctl enable nginx

# 创建PM2配置
cat > ecosystem.config.js << 'EOF'
module.exports = {
  apps: [{
    name: 'aitars-backend',
    script: 'npx tsx server/index.ts',
    cwd: '/var/www/aitars',
    instances: 1,
    autorestart: true,
    watch: false,
    max_memory_restart: '1G',
    env: {
      NODE_ENV: 'production',
      PORT: 3001
    },
    error_file: '/var/log/pm2/aitars-error.log',
    out_file: '/var/log/pm2/aitars-out.log',
    log_file: '/var/log/pm2/aitars.log'
  }]
}
EOF

# 创建日志目录
mkdir -p /var/log/pm2

# 启动应用
pm2 start ecosystem.config.js
pm2 save
pm2 startup --update-env

# 检查状态
pm2 status
systemctl status nginx

# 测试API
curl http://localhost:3001/health

## 第4步: 配置SSL证书 (DNS生效后)
# 等待DNS生效（5-30分钟）后运行：
certbot --nginx -d aitars.io -d www.aitars.io

# 设置自动续期
echo "0 12 * * * /usr/bin/certbot renew --quiet" | crontab -

## 第5步: 验证部署
# 检查所有服务
pm2 status
systemctl status nginx

# 测试访问
curl http://aitars.io
curl https://aitars.io

## 安全配置 (部署完成后立即执行)
# 更换密码
passwd root

# 生成新的JWT密钥
openssl rand -base64 32
# 将生成的密钥更新到 .env 文件的 JWT_SECRET

## 常用管理命令
# 查看日志
pm2 logs aitars-backend

# 重启服务
pm2 restart aitars-backend

# 更新代码
cd /var/www/aitars
git pull origin main
npm install
npm run build
pm2 restart aitars-backend

# 访问地址
echo "部署完成！访问: https://aitars.io" 